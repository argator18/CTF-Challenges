import sys
from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_OAEP

def find_phi(n, e):
    # Calculate n modulo e
    remainder = n % e

    # Calculate the difference to make the remainder 1
    if remainder == 1:
        x = n  # If n is already 1 mod e
    else:
        # Calculate how much to adjust to get 1 mod e
        adjust = 1 - remainder
        x = n + adjust

    # Ensure x is within the desired range (n-e, n)
    if x > n:
        x -= e
    elif x < n - e:
        x += e

    return x

n = int(sys.argv[1])
e = int(sys.argv[2])
phi = find_phi(n,e)
d = (1 + (e -1) * phi) //e
m = bytes.fromhex(sys.argv[3])

key = RSA.construct((n,e,d))
cipher = PKCS1_OAEP.new(key)
plaintext = cipher.decrypt(m)
print(plaintext)

# Example usage
