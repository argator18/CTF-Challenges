import re
import math
from Crypto.Util.number import *

def read_numbers_from_file(filename):
    with open(filename, 'r') as file:
        content = file.read()

    # Extract the main number (assuming it's the first line or before "Hints:")
    main_number_match = re.search(r'^\d+', content)
    if main_number_match:
        main_number = int(main_number_match.group(0))
    else:
        raise ValueError("Main number not found in the file.")

    # Extract the list of numbers within the hints
    hints_match = re.search(r'\[([0-9, \s]+)\]', content)
    if hints_match:
        hints_list = list(map(int, hints_match.group(1).split(',')))
    else:
        raise ValueError("Hints list not found in the file.")

    return main_number, hints_list

c, hints = read_numbers_from_file("hints.txt")
p,q,e,n,d = hints

e = 0x10001
n = n + 1

# The following is the product of the two random Primes(1024) mutliplied with p and q
primes = p*q//n
print(p*q %n)

# The gcd of 'primes' and p or q respectively, will be the prime, multiplied by p and q.
p_prime = math.gcd(primes,p)
q_prime = math.gcd(primes,q)
p = p // p_prime
q = q // q_prime
phi = (p-1) * (q-1)

d = pow(e, -1, phi)

m = pow(c,d,n)
m = long_to_bytes(m).decode('utf-8')
print(m)
