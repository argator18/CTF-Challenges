import requests
import tkinter as tk
from tkinter import filedialog
import sys

def send_post_request(url, data):
    """
    Send a POST request to the specified URL with the given data.

    Parameters:
    - url (str): The URL to which the POST request should be sent.
    - data (dict): A dictionary containing the data to be sent in the POST request.

    Returns:
    - response (requests.Response): The response from the server.
    """
    try:
        # Send a POST request to the URL with the JSON data
        response = requests.post(url, json=data)
        
        # Check if the request was successful
        if response.status_code == 200:
            print("Success: Data posted successfully!")
        else:
            print(f"Failed to post data: Status code {response.status_code} - {response.text}")
        
        return response
    except Exception as e:
        print(f"An error occurred: {e}")
        return None


def select_file():
    """Open a file dialog to select a file and return the file path."""
    root = tk.Tk()
    root.withdraw()  # Use to hide tkinter window

    file_path = filedialog.askopenfilename()  # Show an "Open" dialog box and return the path to the selected file
    return file_path

def upload_file(url, file_path):
    """Upload a file to a given URL using POST request.

    Parameters:
    - url (str): The URL to which the file will be uploaded.
    - file_path (str): The path of the file to be uploaded.
    """
    try:
        files = {'file': open(file_path, 'rb')}
        response = requests.post(url, files=files)
        
        if response.status_code == 200:
            print("File uploaded successfully!")
        else:
            print(f"Failed to upload file: Status code {response.status_code} - {response.text}")
            
        return response
    except Exception as e:
        print(f"An error occurred: {e}")
        return None


def send_raw_post_request(url, data_bytes):
    """
    Send a raw POST request to the specified URL with the given byte data.

    Parameters:
    - url (str): The URL to which the POST request should be sent.
    - data_bytes (bytes): The byte data to be sent in the POST request.

    Returns:
    - response (requests.Response): The response from the server.
    """
    try:
        headers = {
            'Content-Type': 'application/octet-stream',
            'Accept': 'text/html; charset=utf-8'  # Explicitly setting Accept header
        }
        # Send a POST request to the URL with the raw byte data
        response = requests.post(url, data=data_bytes, headers=headers)
        
        # Check if the request was successful
        if response.status_code == 200:
            print("Success: Data posted successfully!")
        else:
            print(f"Failed to post data: Status code {response.status_code} - {response.text}")
        
        return response
    except Exception as e:
        print(f"An error occurred: {e}")
        return None

import random

def random_bytes(num_bytes):
    return bytes([random.randint(0x80, 0xFF) for _ in range(num_bytes)])



# Example usage
if __name__ == "__main__":
    # URL to which the POST request will be sent
    post_url = "https://bcc9f3cbe5d700e5c54f05f1-1024-njs.challenge.cscg.live:1337/upload"
    post_url = "http://localhost:1026/upload"
    post_url = "https://5a60643bd2040a6c84dbb304-1024-njs.challenge.cscg.live:1337/upload"
    #post_url = "https://edb17eaa869952a900e37401-1024-njs.challenge.cscg.live:1337/upload"
    # Prompt user to select a file
    #file_path = select_file()
    file_path = "attack.js"
    if file_path:
        print(f"Selected file: {file_path}")

        # Upload the file
        # response = upload_file(post_url, file_path)
        with open(file_path, "rb") as file:
            content  = file.read()
            #content = b'A'
            #content = 'A' + int(sys.argv[1]) * '\x80'
            #for j in range(20):
            #    for i in range(0x80,0x100):
            #        content += chr(i)
            content = random_bytes(4000)
            response = send_raw_post_request(post_url,content)
        if response:
            print(response.text)
    else:
        print("No file selected.")

    exit()
    # Data to be sent in the POST request
    post_data = {
        "message": "Hello, this is a test message."
    }
    
    # Send the POST request
    #response = send_post_request(post_url, post_data)
    response = send_raw_post_request(post_url,b'\xff\xff')
    
    # Optionally print the response text (JSON response from httpbin.org)
    if response:
        print(response.text)

