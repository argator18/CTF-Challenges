import ssl
import socket
import pwn
import re
import os

# Specify the target host and port
host = '80914affc22bb305e5339406-1024-chooseyourown.challenge.cscg.live'
port = 1337
#host = 'localhost'
#port = 1219


while True:
    p = pwn.remote(host,port,ssl=True)
    p.sendline(b'H')
    p.sendline(b'H')
    p.sendline(b'H')
    p.sendline(b'H')
    p.sendline(b'H')
    p.sendline(b'O')
    p.sendline(b'H')
    output = p.recvall()
    if not b"Unfurling" in output:
        p.close()
        continue
    #print(output)
    p.close()
    break
    



input_str = output.decode('utf-8')
number_of_throws = re.search(r"After (\d+) throws", input_str).group(1)
sequence = ''.join(re.findall(r"The coin lands on (H|T)\.", input_str)) 

# Output the extracted information
print(f"Number of throws: {number_of_throws}")
print(f"Sequence: {sequence}")





command = f'./brute {number_of_throws} {sequence}' 

os.system(command)








hexdump_output = output.split(b"cryptic cipher:")[1].decode('utf-8')

# Extract hexadecimal values using a regular expression
hex_values = re.findall(r'\b[0-9a-f]{2}\b', hexdump_output, re.IGNORECASE)

# Convert the list of hex values into a single string
hex_string = ''.join(hex_values)

# Convert the hexadecimal string to bytes
byte_string = bytes.fromhex(hex_string)

with open("encrypt", 'wb') as f:
    # Write the byte string to the file
    byte_array = bytearray(byte_string)
    f.write(byte_array)
